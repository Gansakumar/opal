(iopal.core.model
Model
p0
(dp1
S'evaluating_options'
p2
(dp3
sS'simple_constraints'
p4
(lp5
sS'platform_description'
p6
(dp7
S'name'
p8
S'LINUX'
p9
sS'settings'
p10
(dp11
ssS'data_file'
p12
S'blackbox.dat'
p13
sS'variables'
p14
(iopal.core.data
DataSet
p15
(dp16
S'indices'
p17
(dp18
S'nothing'
p19
I1
sS'coopTree'
p20
I0
ssS'db'
p21
(lp22
(iopal.core.parameter
Parameter
p23
(dp24
S'kind'
p25
S'categorical'
p26
sg8
g20
sS'is_categorical'
p27
I01
sS'bound'
p28
NsS'value'
p29
S'7952846'
p30
sS'is_binary'
p31
I00
sS'is_scalar'
p32
I01
sS'is_real'
p33
I00
sS'domain'
p34
NsS'_default'
p35
I284354431
sS'dimension'
p36
I1
sS'type'
p37
g26
sS'is_integer'
p38
I00
sS'description'
p39
S'An encoded number represents cooperation tree'
p40
sba(iopal.core.parameter
Parameter
p41
(dp42
g25
S'integer'
p43
sg8
g19
sg27
I00
sg28
Nsg29
I1
sg31
I00
sg32
I01
sg33
I00
sg34
Nsg35
I0
sg36
I1
sg37
g43
sg38
I01
sg39
S'For avoiding the bug of one categorical variable of NOMAD'
p44
sbasg8
S'Parameter set'
p45
sbsS'bounds'
p46
(lp47
NaNasS'inequality_constraints'
p48
(lp49
sS'initial_points'
p50
(lp51
(lp52
I284354431
aI0
aasS'equality_constraints'
p53
(lp54
sS'data'
p55
(iopal.core.modeldata
ModelData
p56
(dp57
S'algorithm'
p58
(iopal.core.algorithm
Algorithm
p59
(dp60
S'executable'
p61
S'python coopsort_run.py'
p62
sg39
S'Sort Algorithm'
p63
sS'parameters'
p64
g15
sS'sessions'
p65
(dp66
sS'measures'
p67
(iopal.core.data
DataSet
p68
(dp69
g17
(dp70
S'TIME'
p71
I0
ssg21
(lp72
(iopal.core.measure
Measure
p73
(dp74
g34
Nsg8
g71
sg27
I00
sg29
Nsg36
I1
sg32
I01
sg33
I01
sg31
I00
sg37
S'real'
p75
sg38
I00
sg39
S'Computing time'
p76
sbasg8
S'Measure set'
p77
sbsg8
S'CoopSort'
p78
sS'parameter_file'
p79
S'CoopSort.param'
p80
sS'constraints'
p81
(lp82
sbsS'neighborhoods'
p83
(lp84
sg64
g15
sg67
g68
sS'problems'
p85
(lp86
(iopal.core.testproblem
TestProblem
p87
(dp88
S'classify_string'
p89
Nsg8
S'1-4000-100'
p90
sg39
NsbasS'running_options'
p91
(dp92
sbsS'structure'
p93
(iopal.core.modelstructure
ModelStructure
p94
(dp95
S'objective'
p96
(iopal.core.modelstructure
Objective
p97
(dp98
S'function'
p99
(iopal.core.modelstructure
MeasureFunction
p100
(dp102
S'information'
p103
(dp104
S'convexity'
p105
I0
sS'additivity'
p106
I0
ssS'code'
p107
S'c\x02\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00C\x00\x00\x00s\x14\x00\x00\x00t\x00\x00|\x01\x00d\x01\x00\x19\x83\x01\x00}\x02\x00|\x02\x00S(\x02\x00\x00\x00Nt\x04\x00\x00\x00TIME(\x01\x00\x00\x00t\x03\x00\x00\x00sum(\x03\x00\x00\x00t\n\x00\x00\x00parameterst\x08\x00\x00\x00measurest\x03\x00\x00\x00val(\x00\x00\x00\x00(\x00\x00\x00\x00s\x1e\x00\x00\x00coopsort_optimize_surrogate.pyt\x08\x00\x00\x00sum_time\x06\x00\x00\x00s\x04\x00\x00\x00\x00\x01\x10\x01'
p108
sS'name'
p109
S'sum_time'
p110
sbsS'lower_bound'
p111
F0.010910604000100001
sg8
g96
sS'upper_bound'
p112
Finf
sbsS'informations'
p113
(dp114
S'neighborhood'
p115
(iopal.core.savablefunction
SavableFunction
p116
(dp117
g103
(dp118
sg107
S'c\x01\x00\x00\x00\x14\x00\x00\x00\x0c\x00\x00\x00C\x00\x00\x00s\xac\x03\x00\x00d\x01\x00d\x02\x00\x84\x01\x00}\x01\x00d\x01\x00d\x03\x00\x84\x01\x00}\x02\x00d\x04\x00d\x00\x00k\x00\x00}\x03\x00|\x03\x00i\x01\x00t\x02\x00\x83\x01\x00}\x04\x00|\x03\x00i\x03\x00d\x05\x00\x83\x01\x00}\x05\x00|\x04\x00i\x04\x00|\x03\x00i\x05\x00\x83\x01\x00\x01|\x05\x00i\x04\x00|\x03\x00i\x05\x00\x83\x01\x00\x01|\x04\x00i\x06\x00|\x05\x00\x83\x01\x00\x01|\x01\x00t\x07\x00t\x08\x00|\x00\x00d\x06\x00\x19\x83\x01\x00\x83\x01\x00d\x01\x00\x83\x02\x00}\x06\x00|\x00\x00d\x06\x00\x19d\x07\x00\x17t\t\x00t\x07\x00t\x08\x00|\x00\x00d\x06\x00\x19\x83\x01\x00\x83\x01\x00\x83\x01\x00\x17d\x07\x00\x17|\x06\x00\x17d\x08\x00\x17}\x07\x00d\t\x00d\n\x00d\x0b\x00d\x0c\x00g\x04\x00}\x08\x00d\r\x00d\x0e\x00g\x02\x00}\t\x00h\x06\x00d\x0b\x00d\x0c\x00g\x02\x00d\t\x006d\x0b\x00d\x0c\x00g\x02\x00d\n\x006d\n\x00d\x0c\x00g\x02\x00d\x0b\x006d\n\x00d\x0b\x00g\x02\x00d\x0c\x006d\x0e\x00g\x01\x00d\r\x006d\r\x00g\x01\x00d\x0e\x006}\n\x00g\x00\x00}\x0b\x00x`\x02t\n\x00t\x0b\x00|\x06\x00\x83\x01\x00\x83\x01\x00D]L\x02}\x0c\x00|\x06\x00|\x0c\x00\x19}\r\x00xx\x00|\n\x00|\r\x00\x19D]l\x00}\x0e\x00|\x06\x00d\x06\x00|\x0c\x00!|\x0e\x00\x17|\x06\x00|\x0c\x00d\x0f\x00\x17\x1f\x17}\x0f\x00t\x0c\x00|\x00\x00\x83\x01\x00}\x10\x00|\x02\x00|\x0f\x00\x83\x01\x00|\x10\x00d\x06\x00<|\x07\x00|\x0f\x00\x17d\x10\x00\x17t\t\x00|\x10\x00d\x06\x00\x19\x83\x01\x00\x17d\x07\x00\x17}\x07\x00|\x0b\x00i\r\x00|\x10\x00\x83\x01\x00\x01qb\x01W|\r\x00|\x08\x00j\x06\x00o\x93\x00\x01x\xb1\x01|\t\x00D]\x84\x00}\x11\x00|\x06\x00d\x06\x00|\x0c\x00!|\x11\x00\x17|\n\x00|\r\x00\x19d\x06\x00\x19\x17|\n\x00|\r\x00\x19d\x0f\x00\x19\x17|\x06\x00|\x0c\x00d\x0f\x00\x17\x1f\x17}\x0f\x00t\x0c\x00|\x00\x00\x83\x01\x00}\x10\x00|\x02\x00|\x0f\x00\x83\x01\x00|\x10\x00d\x06\x00<|\x07\x00|\x0f\x00\x17d\x10\x00\x17t\t\x00|\x10\x00d\x06\x00\x19\x83\x01\x00\x17d\x07\x00\x17}\x07\x00|\x0b\x00i\r\x00|\x10\x00\x83\x01\x00\x01q\xe6\x01WqG\x01\x01|\x0c\x00t\x0b\x00|\x06\x00\x83\x01\x00d\x11\x00\x18j\x00\x00o\n\x01\x01|\x06\x00|\x0c\x00d\x0f\x00\x17\x19}\x12\x00|\x06\x00|\x0c\x00d\x11\x00\x17\x19}\x13\x00|\x12\x00|\x08\x00j\x06\x00o\xdd\x00\x01|\x13\x00|\x08\x00j\x06\x00o\xd0\x00\x01|\x06\x00d\x06\x00|\x0c\x00!|\x12\x00\x17|\x06\x00|\x0c\x00d\x12\x00\x17\x1f\x17}\x0f\x00t\x0c\x00|\x00\x00\x83\x01\x00}\x10\x00|\x02\x00|\x0f\x00\x83\x01\x00|\x10\x00d\x06\x00<|\x07\x00|\x0f\x00\x17d\x10\x00\x17t\t\x00|\x10\x00d\x06\x00\x19\x83\x01\x00\x17d\x07\x00\x17}\x07\x00|\x0b\x00i\r\x00|\x10\x00\x83\x01\x00\x01|\x06\x00d\x06\x00|\x0c\x00!|\x13\x00\x17|\x06\x00|\x0c\x00d\x12\x00\x17\x1f\x17}\x0f\x00t\x0c\x00|\x00\x00\x83\x01\x00}\x10\x00|\x02\x00|\x0f\x00\x83\x01\x00|\x10\x00d\x06\x00<|\x07\x00|\x0f\x00\x17d\x10\x00\x17t\t\x00|\x10\x00d\x06\x00\x19\x83\x01\x00\x17d\x07\x00\x17}\x07\x00|\x0b\x00i\r\x00|\x10\x00\x83\x01\x00\x01q\x93\x03\x01qG\x01\x01qG\x01W|\x04\x00i\x0e\x00|\x07\x00d\x13\x00\x17\x83\x01\x00\x01|\x0b\x00S(\x14\x00\x00\x00Ni\x06\x00\x00\x00c\x02\x00\x00\x00\x04\x00\x00\x00\x03\x00\x00\x00S\x00\x00\x00sV\x00\x00\x00d\x01\x00}\x02\x00|\x00\x00d\x02\x00j\x02\x00o\x05\x00\x01d\x03\x00S\x01x7\x00|\x00\x00d\x02\x00j\x04\x00o)\x00\x01t\x00\x00|\x00\x00|\x01\x00\x83\x02\x00\\\x02\x00}\x00\x00}\x03\x00t\x01\x00|\x03\x00\x83\x01\x00|\x02\x00\x17}\x02\x00q\x1b\x00\x01W|\x02\x00S(\x04\x00\x00\x00Nt\x00\x00\x00\x00i\x00\x00\x00\x00t\x01\x00\x00\x000(\x02\x00\x00\x00t\x06\x00\x00\x00divmodt\x03\x00\x00\x00str(\x04\x00\x00\x00t\x06\x00\x00\x00numbert\x04\x00\x00\x00baset\t\x00\x00\x00numberStrt\x01\x00\x00\x00r(\x00\x00\x00\x00(\x00\x00\x00\x00s\x1e\x00\x00\x00coopsort_optimize_surrogate.pyt\x06\x00\x00\x00encode\r\x00\x00\x00s\x10\x00\x00\x00\x00\x01\x06\x01\r\x01\x05\x01\x03\x00\r\x01\x15\x01\x15\x01c\x02\x00\x00\x00\x06\x00\x00\x00\x04\x00\x00\x00S\x00\x00\x00sR\x00\x00\x00|\x00\x00d\x00\x00d\x00\x00d\x01\x00\x85\x03\x00\x19}\x02\x00d\x02\x00}\x03\x00d\x03\x00}\x04\x00x,\x00|\x02\x00D]$\x00}\x05\x00|\x03\x00t\x00\x00|\x05\x00\x83\x01\x00|\x04\x00\x14\x17}\x03\x00|\x04\x00|\x01\x00\x14}\x04\x00q&\x00W|\x03\x00S(\x04\x00\x00\x00Ni\xff\xff\xff\xffi\x00\x00\x00\x00i\x01\x00\x00\x00(\x01\x00\x00\x00t\x03\x00\x00\x00int(\x06\x00\x00\x00R\x06\x00\x00\x00R\x05\x00\x00\x00t\x0b\x00\x00\x00invertedStrR\x04\x00\x00\x00t\x08\x00\x00\x00quotientt\x01\x00\x00\x00c(\x00\x00\x00\x00(\x00\x00\x00\x00s\x1e\x00\x00\x00coopsort_optimize_surrogate.pyt\x06\x00\x00\x00decode\x16\x00\x00\x00s\x10\x00\x00\x00\x00\x01\x13\x01\x06\x01\x06\x01\x07\x00\x06\x01\x14\x01\x0e\x01i\xff\xff\xff\xffs\x10\x00\x00\x00neighborhood.logi\x00\x00\x00\x00s\x02\x00\x00\x00, s\x02\x00\x00\x00: R\x01\x00\x00\x00t\x01\x00\x00\x001t\x01\x00\x00\x002t\x01\x00\x00\x003t\x01\x00\x00\x004t\x01\x00\x00\x005i\x01\x00\x00\x00s\x04\x00\x00\x00 -> i\x02\x00\x00\x00i\x03\x00\x00\x00s\x01\x00\x00\x00\n(\x0f\x00\x00\x00t\x07\x00\x00\x00loggingt\t\x00\x00\x00getLoggert\x08\x00\x00\x00__name__t\x0b\x00\x00\x00FileHandlert\x08\x00\x00\x00setLevelt\x04\x00\x00\x00INFOt\n\x00\x00\x00addHandlerR\t\x00\x00\x00t\x05\x00\x00\x00floatR\x03\x00\x00\x00t\x05\x00\x00\x00ranget\x03\x00\x00\x00lent\x04\x00\x00\x00listt\x06\x00\x00\x00appendt\x04\x00\x00\x00info(\x14\x00\x00\x00t\n\x00\x00\x00parametersR\x08\x00\x00\x00R\r\x00\x00\x00R\x13\x00\x00\x00t\x06\x00\x00\x00loggert\x02\x00\x00\x00fht\r\x00\x00\x00encodedNumbert\n\x00\x00\x00logMessaget\x03\x00\x00\x00s_st\x03\x00\x00\x00s_dt\x03\x00\x00\x00n_st\t\x00\x00\x00neighborst\x01\x00\x00\x00iR\x0c\x00\x00\x00t\x01\x00\x00\x00nt\x06\x00\x00\x00tmpStrt\x08\x00\x00\x00neighbort\x01\x00\x00\x00dt\x03\x00\x00\x00s_1t\x03\x00\x00\x00s_2(\x00\x00\x00\x00(\x00\x00\x00\x00s\x1e\x00\x00\x00coopsort_optimize_surrogate.pyt\r\x00\x00\x00get_neighbors\x0c\x00\x00\x00sl\x00\x00\x00\x00\x01\x0c\t\x0c\x10\x0c\x01\x0f\x01\x0f\x01\x10\x01\x10\x01\r\x01\x1f\x014\x02\x12\x02\x0c\x02\x10\x01\r\x01\r\x01\r\x01\n\x01\r\x03\x06\x01\x13\x00\x06\x01\n\x01\x0b\x00\x06\x01\x1d\x03\x0c\x03\x10\x01 \x02\x11\x01\r\x01\x07\x00\x06\x02&\x01\x0f\x01\x0c\x03\x10\x01 \x03\x15\x01\x17\x01\x0e\x01\x0e\x01\x1a\x01\x1d\x01\x0c\x02\x10\x02 \x01\r\x01\x1d\x01\x0c\x02\x10\x01 \x01\x19\x01\x11\x01'
p119
sg109
g115
sbssg8
S'modelstruct'
p120
sg81
(lp121
sbsb.